/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-virtual";
exports.ids = ["vendor-chunks/react-virtual"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-virtual/dist/react-virtual.development.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-virtual/dist/react-virtual.development.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("(function (global, factory) {\n   true ? factory(exports, __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\")) :\n  0;\n}(this, (function (exports, React) { 'use strict';\n\n  React = React && Object.prototype.hasOwnProperty.call(React, 'default') ? React['default'] : React;\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\n  var rectChanged = function rectChanged(a, b) {\n    if (a === void 0) {\n      a = {};\n    }\n\n    if (b === void 0) {\n      b = {};\n    }\n\n    return props.some(function (prop) {\n      return a[prop] !== b[prop];\n    });\n  };\n\n  var observedNodes = /*#__PURE__*/new Map();\n  var rafId;\n\n  var run = function run() {\n    var changedStates = [];\n    observedNodes.forEach(function (state, node) {\n      var newRect = node.getBoundingClientRect();\n\n      if (rectChanged(newRect, state.rect)) {\n        state.rect = newRect;\n        changedStates.push(state);\n      }\n    });\n    changedStates.forEach(function (state) {\n      state.callbacks.forEach(function (cb) {\n        return cb(state.rect);\n      });\n    });\n    rafId = window.requestAnimationFrame(run);\n  };\n\n  function observeRect(node, cb) {\n    return {\n      observe: function observe() {\n        var wasEmpty = observedNodes.size === 0;\n\n        if (observedNodes.has(node)) {\n          observedNodes.get(node).callbacks.push(cb);\n        } else {\n          observedNodes.set(node, {\n            rect: undefined,\n            hasRectChanged: false,\n            callbacks: [cb]\n          });\n        }\n\n        if (wasEmpty) run();\n      },\n      unobserve: function unobserve() {\n        var state = observedNodes.get(node);\n\n        if (state) {\n          // Remove the callback\n          var index = state.callbacks.indexOf(cb);\n          if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n          if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n          if (!observedNodes.size) cancelAnimationFrame(rafId);\n        }\n      }\n    };\n  }\n\n  var useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n  function useRect(nodeRef, initialRect) {\n    if (initialRect === void 0) {\n      initialRect = {\n        width: 0,\n        height: 0\n      };\n    }\n\n    var _React$useState = React.useState(nodeRef.current),\n        element = _React$useState[0],\n        setElement = _React$useState[1];\n\n    var _React$useReducer = React.useReducer(rectReducer, initialRect),\n        rect = _React$useReducer[0],\n        dispatch = _React$useReducer[1];\n\n    var initialRectSet = React.useRef(false);\n    useIsomorphicLayoutEffect(function () {\n      if (nodeRef.current !== element) {\n        setElement(nodeRef.current);\n      }\n    });\n    useIsomorphicLayoutEffect(function () {\n      if (element && !initialRectSet.current) {\n        initialRectSet.current = true;\n\n        var _rect = element.getBoundingClientRect();\n\n        dispatch({\n          rect: _rect\n        });\n      }\n    }, [element]);\n    React.useEffect(function () {\n      if (!element) {\n        return;\n      }\n\n      var observer = observeRect(element, function (rect) {\n        dispatch({\n          rect: rect\n        });\n      });\n      observer.observe();\n      return function () {\n        observer.unobserve();\n      };\n    }, [element]);\n    return rect;\n  }\n\n  function rectReducer(state, action) {\n    var rect = action.rect;\n\n    if (state.height !== rect.height || state.width !== rect.width) {\n      return rect;\n    }\n\n    return state;\n  }\n\n  var defaultEstimateSize = function defaultEstimateSize() {\n    return 50;\n  };\n\n  var defaultKeyExtractor = function defaultKeyExtractor(index) {\n    return index;\n  };\n\n  var defaultMeasureSize = function defaultMeasureSize(el, horizontal) {\n    var key = horizontal ? 'offsetWidth' : 'offsetHeight';\n    return el[key];\n  };\n\n  var defaultRangeExtractor = function defaultRangeExtractor(range) {\n    var start = Math.max(range.start - range.overscan, 0);\n    var end = Math.min(range.end + range.overscan, range.size - 1);\n    var arr = [];\n\n    for (var i = start; i <= end; i++) {\n      arr.push(i);\n    }\n\n    return arr;\n  };\n  function useVirtual(_ref) {\n    var _measurements;\n\n    var _ref$size = _ref.size,\n        size = _ref$size === void 0 ? 0 : _ref$size,\n        _ref$estimateSize = _ref.estimateSize,\n        estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize,\n        _ref$overscan = _ref.overscan,\n        overscan = _ref$overscan === void 0 ? 1 : _ref$overscan,\n        _ref$paddingStart = _ref.paddingStart,\n        paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart,\n        _ref$paddingEnd = _ref.paddingEnd,\n        paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd,\n        parentRef = _ref.parentRef,\n        horizontal = _ref.horizontal,\n        scrollToFn = _ref.scrollToFn,\n        useObserver = _ref.useObserver,\n        initialRect = _ref.initialRect,\n        onScrollElement = _ref.onScrollElement,\n        scrollOffsetFn = _ref.scrollOffsetFn,\n        _ref$keyExtractor = _ref.keyExtractor,\n        keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor,\n        _ref$measureSize = _ref.measureSize,\n        measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize,\n        _ref$rangeExtractor = _ref.rangeExtractor,\n        rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;\n    var sizeKey = horizontal ? 'width' : 'height';\n    var scrollKey = horizontal ? 'scrollLeft' : 'scrollTop';\n    var latestRef = React.useRef({\n      scrollOffset: 0,\n      measurements: []\n    });\n\n    var _React$useState = React.useState(0),\n        scrollOffset = _React$useState[0],\n        setScrollOffset = _React$useState[1];\n\n    latestRef.current.scrollOffset = scrollOffset;\n    var useMeasureParent = useObserver || useRect;\n\n    var _useMeasureParent = useMeasureParent(parentRef, initialRect),\n        outerSize = _useMeasureParent[sizeKey];\n\n    latestRef.current.outerSize = outerSize;\n    var defaultScrollToFn = React.useCallback(function (offset) {\n      if (parentRef.current) {\n        parentRef.current[scrollKey] = offset;\n      }\n    }, [parentRef, scrollKey]);\n    var resolvedScrollToFn = scrollToFn || defaultScrollToFn;\n    scrollToFn = React.useCallback(function (offset) {\n      resolvedScrollToFn(offset, defaultScrollToFn);\n    }, [defaultScrollToFn, resolvedScrollToFn]);\n\n    var _React$useState2 = React.useState({}),\n        measuredCache = _React$useState2[0],\n        setMeasuredCache = _React$useState2[1];\n\n    var measure = React.useCallback(function () {\n      return setMeasuredCache({});\n    }, []);\n    var pendingMeasuredCacheIndexesRef = React.useRef([]);\n    var measurements = React.useMemo(function () {\n      var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;\n      pendingMeasuredCacheIndexesRef.current = [];\n      var measurements = latestRef.current.measurements.slice(0, min);\n\n      for (var i = min; i < size; i++) {\n        var key = keyExtractor(i);\n        var measuredSize = measuredCache[key];\n\n        var _start = measurements[i - 1] ? measurements[i - 1].end : paddingStart;\n\n        var _size = typeof measuredSize === 'number' ? measuredSize : estimateSize(i);\n\n        var _end = _start + _size;\n\n        measurements[i] = {\n          index: i,\n          start: _start,\n          size: _size,\n          end: _end,\n          key: key\n        };\n      }\n\n      return measurements;\n    }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);\n    var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;\n    latestRef.current.measurements = measurements;\n    latestRef.current.totalSize = totalSize;\n    var element = onScrollElement ? onScrollElement.current : parentRef.current;\n    var scrollOffsetFnRef = React.useRef(scrollOffsetFn);\n    scrollOffsetFnRef.current = scrollOffsetFn;\n    useIsomorphicLayoutEffect(function () {\n      if (!element) {\n        setScrollOffset(0);\n        return;\n      }\n\n      var onScroll = function onScroll(event) {\n        var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];\n        setScrollOffset(offset);\n      };\n\n      onScroll();\n      element.addEventListener('scroll', onScroll, {\n        capture: false,\n        passive: true\n      });\n      return function () {\n        element.removeEventListener('scroll', onScroll);\n      };\n    }, [element, scrollKey]);\n\n    var _calculateRange = calculateRange(latestRef.current),\n        start = _calculateRange.start,\n        end = _calculateRange.end;\n\n    var indexes = React.useMemo(function () {\n      return rangeExtractor({\n        start: start,\n        end: end,\n        overscan: overscan,\n        size: measurements.length\n      });\n    }, [start, end, overscan, measurements.length, rangeExtractor]);\n    var measureSizeRef = React.useRef(measureSize);\n    measureSizeRef.current = measureSize;\n    var virtualItems = React.useMemo(function () {\n      var virtualItems = [];\n\n      var _loop = function _loop(k, len) {\n        var i = indexes[k];\n        var measurement = measurements[i];\n\n        var item = _extends(_extends({}, measurement), {}, {\n          measureRef: function measureRef(el) {\n            if (el) {\n              var measuredSize = measureSizeRef.current(el, horizontal);\n\n              if (measuredSize !== item.size) {\n                var _scrollOffset = latestRef.current.scrollOffset;\n\n                if (item.start < _scrollOffset) {\n                  defaultScrollToFn(_scrollOffset + (measuredSize - item.size));\n                }\n\n                pendingMeasuredCacheIndexesRef.current.push(i);\n                setMeasuredCache(function (old) {\n                  var _extends2;\n\n                  return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));\n                });\n              }\n            }\n          }\n        });\n\n        virtualItems.push(item);\n      };\n\n      for (var k = 0, len = indexes.length; k < len; k++) {\n        _loop(k);\n      }\n\n      return virtualItems;\n    }, [indexes, defaultScrollToFn, horizontal, measurements]);\n    var mountedRef = React.useRef(false);\n    useIsomorphicLayoutEffect(function () {\n      if (mountedRef.current) {\n        setMeasuredCache({});\n      }\n\n      mountedRef.current = true;\n    }, [estimateSize]);\n    var scrollToOffset = React.useCallback(function (toOffset, _temp) {\n      var _ref2 = _temp === void 0 ? {} : _temp,\n          _ref2$align = _ref2.align,\n          align = _ref2$align === void 0 ? 'start' : _ref2$align;\n\n      var _latestRef$current = latestRef.current,\n          scrollOffset = _latestRef$current.scrollOffset,\n          outerSize = _latestRef$current.outerSize;\n\n      if (align === 'auto') {\n        if (toOffset <= scrollOffset) {\n          align = 'start';\n        } else if (toOffset >= scrollOffset + outerSize) {\n          align = 'end';\n        } else {\n          align = 'start';\n        }\n      }\n\n      if (align === 'start') {\n        scrollToFn(toOffset);\n      } else if (align === 'end') {\n        scrollToFn(toOffset - outerSize);\n      } else if (align === 'center') {\n        scrollToFn(toOffset - outerSize / 2);\n      }\n    }, [scrollToFn]);\n    var tryScrollToIndex = React.useCallback(function (index, _temp2) {\n      var _ref3 = _temp2 === void 0 ? {} : _temp2,\n          _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          rest = _objectWithoutPropertiesLoose(_ref3, [\"align\"]);\n\n      var _latestRef$current2 = latestRef.current,\n          measurements = _latestRef$current2.measurements,\n          scrollOffset = _latestRef$current2.scrollOffset,\n          outerSize = _latestRef$current2.outerSize;\n      var measurement = measurements[Math.max(0, Math.min(index, size - 1))];\n\n      if (!measurement) {\n        return;\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffset + outerSize) {\n          align = 'end';\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start';\n        } else {\n          return;\n        }\n      }\n\n      var toOffset = align === 'center' ? measurement.start + measurement.size / 2 : align === 'end' ? measurement.end : measurement.start;\n      scrollToOffset(toOffset, _extends({\n        align: align\n      }, rest));\n    }, [scrollToOffset, size]);\n    var scrollToIndex = React.useCallback(function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // We do a double request here because of\n      // dynamic sizes which can cause offset shift\n      // and end up in the wrong spot. Unfortunately,\n      // we can't know about those dynamic sizes until\n      // we try and render them. So double down!\n      tryScrollToIndex.apply(void 0, args);\n      requestAnimationFrame(function () {\n        tryScrollToIndex.apply(void 0, args);\n      });\n    }, [tryScrollToIndex]);\n    return {\n      virtualItems: virtualItems,\n      totalSize: totalSize,\n      scrollToOffset: scrollToOffset,\n      scrollToIndex: scrollToIndex,\n      measure: measure\n    };\n  }\n\n  var findNearestBinarySearch = function findNearestBinarySearch(low, high, getCurrentValue, value) {\n    while (low <= high) {\n      var middle = (low + high) / 2 | 0;\n      var currentValue = getCurrentValue(middle);\n\n      if (currentValue < value) {\n        low = middle + 1;\n      } else if (currentValue > value) {\n        high = middle - 1;\n      } else {\n        return middle;\n      }\n    }\n\n    if (low > 0) {\n      return low - 1;\n    } else {\n      return 0;\n    }\n  };\n\n  function calculateRange(_ref4) {\n    var measurements = _ref4.measurements,\n        outerSize = _ref4.outerSize,\n        scrollOffset = _ref4.scrollOffset;\n    var size = measurements.length - 1;\n\n    var getOffset = function getOffset(index) {\n      return measurements[index].start;\n    };\n\n    var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);\n    var end = start;\n\n    while (end < size && measurements[end].end < scrollOffset + outerSize) {\n      end++;\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  exports.defaultRangeExtractor = defaultRangeExtractor;\n  exports.useVirtual = useVirtual;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=react-virtual.development.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-virtual/dist/react-virtual.development.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-virtual/index.js":
/*!*********************************************!*\
  !*** ./node_modules/react-virtual/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("if (false) {} else {\n  module.exports = __webpack_require__(/*! ./dist/react-virtual.development.js */ \"(ssr)/./node_modules/react-virtual/dist/react-virtual.development.js\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtdmlydHVhbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsdUpBQStEO0FBQ2pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmQtbmV4dGpzLXN0YXJ0ZXItYmxvZy8uL25vZGVfbW9kdWxlcy9yZWFjdC12aXJ0dWFsL2luZGV4LmpzP2E1ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvcmVhY3QtdmlydHVhbC5wcm9kdWN0aW9uLm1pbi5qcycpXG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9yZWFjdC12aXJ0dWFsLmRldmVsb3BtZW50LmpzJylcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-virtual/index.js\n");

/***/ })

};
;